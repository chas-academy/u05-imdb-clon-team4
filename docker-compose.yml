# Run in shell
# 1. docker-compose build app
# 2. docker-compose up -d
# 3. docker-compose exec app composer i && npm i

version: '3.8'

services:
    # APP
    app:
        build:
            args:
                user: user
                uid: 1000
            context: ./docker-compose/php
        image: imdbclone
        container_name: imdbclone-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www

    # DATABASE
    db:
        image: mariadb:latest
        container_name: imdbclone-db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        volumes:
            - clonedb:/var/lib/mysql

    # WEB SERVER
    nginx:
        build:
            args:
                DEV_DOMAIN: ${DEV_DOMAIN}
            context: ./docker-compose/nginx
        image: nginx
        container_name: imdbclone-nginx
        restart: unless-stopped
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./:/var/www
            - ./docker-compose/nginx/vhost:/etc/nginx/conf.d/default.conf

    #PMA
    phpmyadmin:
        depends_on:
            - db
        links:
            - db
        image: phpmyadmin:latest
        restart: always
        ports:
            - '8081:80'
        environment:
            PMA_HOST: db
            MYSQL_USERNAME: '${DB_USERNAME}'
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
        volumes:
            - pma:/sessions
        container_name: phpmyadmin

volumes:
    clonedb:
    pma:
